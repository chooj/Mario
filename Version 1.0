float xPos;
float ux;
float y;
float rx = 10;
float ry = 10;
float ys;
float b = 450;
float rand;
float frame = 60;
int lives = 1;
int score;
int goombasKilled;
int thingsCollected;
int highScore;
boolean dead = false;
PImage smile;
PImage poop;
PImage flower;
PImage mushroom;
hill hill = new hill(800);
bunkers bunkers = new bunkers(-600);
jumps jumps = new jumps(-600);
goombas goombas = new goombas(-600);

void hillReset() {
  hill.cY = 295;
  hill.cYS = 0;
  hill.mY = 295;
  hill.mYS = 0;
  hill.fY = 295;
  hill.fYS = 0;
}

void bunkersReset() {
  for (int i = 0; i < bunkers.gx.length; i++) {
    bunkers.gx[i] = bunkers.x + 100 + bunkers.gr + i*200;
    bunkers.gs[i] = 1;
    bunkers.gDead[i] = false;
  }
}
void goombasReset() {
  goombas.leftB = goombas.x + 150 + goombas.gr;
  goombas.rightB = goombas.x + 550 - goombas.gr;
  for (int i = 0; i < goombas.gx.length; i++) {
    goombas.gx[i] = goombas.leftB + i*(goombas.rightB - goombas.leftB)/3;
    goombas.gs[i] = 1;
    goombas.gDead[i] = false;
  }
}

void loseALife() {
  lives = lives - 1;
  if (lives > 0) {
    y = -ry;
    ys = 0;
  }
}

void death() {
  fill(0);
  textSize(100);
  textAlign(CENTER);
  text("YOU DIED", width/2, 200);
  textSize(40);
  text("YOUR SCORE: " + score, width/2, 250);
  text("PRESS SPACE TO RESTART", width/2, 350);
  if (score <= highScore) {
    fill(0);
    text("HIGH SCORE: " + highScore, width/2, 300);
  } else {
    fill(200, 0, 0);
    text("NEW HIGH SCORE: " + score, width/2, 300);
  }
}

void reset() {
  xPos = 0;
  ux = 0;
  if (score > highScore) {
    highScore = score;
  }
  frame = 60;
  score = 0;
  goombasKilled = 0;
  thingsCollected = 0;
  ry = 10;
  y = -ry;
  ys = 0;
  lives = 1;
  b = 450;
  dead = false;
  hill.x = 800;
  bunkers.x = -600;
  jumps.x = -600;
  goombas.x = -600;
  hillReset();
  bunkersReset();
  goombasReset();
}

void setup() {
  size(1000, 500);
  smile = loadImage("smile.png");
  poop = loadImage("poop.png");
  flower = loadImage("flower.png");
  mushroom = loadImage("mushroom.png");
}

void draw() {
  background(180, 180, 255);
  frameRate(frame);
  if (frame < 80) {
    frame = frame + 0.005;
  }
  noStroke();
  fill(180, 255, 180);
  rect(xPos, height - 50, width, 50);
  noStroke();
  if (lives < 3) {
    fill(200, 0, 0);
  } else {
    fill(255, 255, 255);
  }
  rect(width/2 - rx, y - ry, rx*2, ry*2);
  if (lives >= 2 && ry < 15) {
    ry = ry + 1;
  }
  if (lives == 1 && ry > 10) {
    ry = ry - 1;
  }
  if (lives > 0) {
    xPos = xPos - 3;
  }
  ux = -xPos;
  y = y + ys;
  ys = ys + 0.4;
  if (y >= b - ry) {
    y = b - ry;
  }
  for (int i = 0; i < 100; i++) {
    if (ux >= 398 + i*600 && ux <= 401 + i*600) {
      rand = random(100);
      if (bunkers.x <= -600 - xPos && jumps.x <= -600 - xPos && goombas.x <= -600 - xPos) {
        if (rand >= 66) {
          bunkers.x = width - xPos;
          bunkersReset();
        }
        if (rand >= 33 && rand < 66) {
          jumps.x = width - xPos;
        }
        if (rand < 33) {
          goombas.x = width - xPos;
          goombasReset();
        }
      } else if (hill.x <= -600 - xPos && bunkers.x <= -600 - xPos) {
        if (rand >= 50) {
          hill.x = width - xPos;
          hillReset();
        } else {
          bunkers.x = width - xPos;
          bunkersReset();
        }
      } else if (hill.x <= -600 - xPos && jumps.x <= -600 - xPos) {
        if (rand >= 50) {
          hill.x = width - xPos;
          hillReset();
        } else {
          jumps.x = width - xPos;
        }
      } else if (hill.x <= -600 - xPos && goombas.x <= -600 - xPos) {
        if (rand >= 50) {
          hill.x = width - xPos;
          hillReset();
        } else {
          goombas.x = width - xPos;
          goombasReset();
        }
      } else if (bunkers.x <= -600 - xPos && jumps.x <= -600 - xPos) {
        if (rand >= 50) {
          bunkers.x = width - xPos;
          bunkersReset();
        } else {
          jumps.x = width - xPos;
        }
      } else if (bunkers.x <= -600 - xPos && goombas.x <= -600 - xPos) {
        if (rand >= 50) {
          bunkers.x = width - xPos;
          bunkersReset();
        } else {
          goombas.x = width - xPos;
          goombasReset();
        }
      } else if (jumps.x <= -600 - xPos && goombas.x <= -600 - xPos) {
        if (rand >= 50) {
          jumps.x = width - xPos;
        } else {
          goombas.x = width - xPos;
        }
      }
    }
  }
  fill(0);
  textSize(30);
  textAlign(RIGHT);
  text(score, width - 10, 40);
  score = round(ux/5) + goombasKilled*20 + thingsCollected*10;
  hill.run();
  bunkers.run();
  jumps.run();
  goombas.run();
  if (y > height + 50) {
    loseALife();
  }
  if (y > height + ry && lives > 0) {
    y = b - ry;
  }
  if (lives <= 0) {
    death();
  }
}

void keyPressed() {
  if (keyCode == UP && y == b - ry && lives > 0) {
    ys = -7.5;
  }
  if (key == ' ' && lives <= 0) {
    reset();
  }
}

class hill {
  float x, cY, cYS, mY, mYS, fY, fYS;
  hill(float a) {
    x = a;
    cY = 295;
    cYS = 0;
    mY = 295;
    mYS = 0;
    fY = 295;
    fYS = 0;
  }
  void run() {
    noStroke();
    fill(180, 255, 180);
    rect(x + xPos, height - 75, 100, 75);
    rect(x + 100 + xPos, height - 100, 100, 100);
    rect(x + 200 + xPos, height - 125, 100, 125);
    rect(x + 300 + xPos, height - 100, 100, 100);
    rect(x + 400 + xPos, height - 75, 100, 75);
    rect(x + 500 + xPos, height - 50, 100, 50);
    if ((xPos <= -x + 500 && xPos > -x + 400)||(xPos <= -x + 100 && xPos > -x)) {
      b = height - 75;
    }
    if ((xPos <= -x + 400 && xPos > -x + 300)||(xPos <= -x + 200 && xPos > -x + 100)) {
      b = height - 100;
    }
    if (xPos <= -x + 300 && xPos > -x + 200) {
      b = height - 125;
    }
    if (xPos <= -x && xPos > -x - 100) {
      b = height - 50;
    }
    if (xPos >= -x + 500 && xPos <= -x + 500 + rx && y + ry > height - 75) {
      xPos = -x + 500 + rx;
    }
    if (xPos >= -x + 400 && xPos <= -x + 400 + rx && y + ry > height - 100) {
      xPos = -x + 400 + rx;
    }
    if (xPos >= -x + 300 && xPos <= -x + 300 + rx && y + ry > height - 125) {
      xPos = -x + 300 + rx;
    }
    fill(220, 220, 0);
    ellipse(x + 250 + xPos, cY, 20, 20);
    image(mushroom, x + 240 + xPos, mY - 10, 20, 20);
    image(flower, x + 240 + xPos, fY - 10, 20, 20);
    fill(120, 42, 42);
    rect(x + 235 + xPos, 280, 30, 30);
    fill(255);
    textAlign(CENTER);
    textSize(20);
    text("?", x + 250 + xPos, 302);
    if (xPos + rx > -x + 250 - rx && xPos - rx < -x + 250 + rx && y - ry < 310) {
      thingsCollected = thingsCollected + 1;
      if (random(100) > 50) {
        cYS = -1;
      } else {
        if (lives == 1) {
          mYS = -1;
          lives = lives + 1;
        } else if (lives > 1) {
          fYS = -1;
          lives = lives + 1;
        }
      }
      y = 311 + ry;
      ys = 0.4;
    }
    cY = cY + cYS;
    cYS = cYS*1.05;
    mY = mY + mYS;
    mYS = mYS*1.05;
    fY = fY + fYS;
    fYS = fYS*1.05;
  }
}

class bunkers {
  float x, gr;
  float[] gx = new float[3];
  float[] gs = new float[3];
  boolean[] gDead = new boolean[3];
  bunkers(float a) {
    x = a;
    gr = 10;
    for (int i = 0; i < gx.length; i++) {
      gx[i] = x + 100 + gr + i*200;
      gs[i] = 1;
      gDead[i] = false;
    }
  }
  void run() {
    noStroke();
    fill(180, 255, 180);
    rect(x + xPos, height - 75, 100, 75);
    rect(x + 100 + xPos, height - 50, 100, 50);
    rect(x + 200 + xPos, height - 75, 100, 75);
    rect(x + 300 + xPos, height - 50, 100, 50);
    rect(x + 400 + xPos, height - 75, 100, 75);
    rect(x + 500 + xPos, height - 50, 100, 50);
    if ((xPos <= -x + 500 && xPos > -x + 400)||(xPos <= -x + 300 && xPos > -x + 200)||(xPos <= -x + 100 && xPos > -x)) {
      b = height - 75;
    }
    if ((xPos <= -x + 400 && xPos > -x + 300)||(xPos <= - x + 200 && xPos > -x + 100)||(xPos <= -x && xPos > -x - 100)) {
      b = height - 50;
    }
    if (xPos >= -x + 500 && xPos <= -x + 500 + rx && y + ry > height - 75) {
      xPos = -x + 500 + rx;
    }
    if (xPos >= -x + 300 && xPos <= -x + 300 + rx && y + ry > height - 75) {
      xPos = -x + 300 + rx;
    }
    if (xPos >= -x + 100 && xPos <= -x + 100 + rx && y + ry > height - 75) {
      xPos = -x + 100 + rx;
    }
    for (int i = 0; i < gx.length; i++) {
      if (gDead[i] == false) {
        image(poop, gx[i] + xPos - gr*1.75, height - 50 - gr*3, gr*3.5, gr*3.5);
        gx[i] = gx[i] + gs[i];
        if ((gx[i] + gr > x + 200 + i*200)||(gx[i] - gr < x + 100 + i*200)) {
          gs[i] = -gs[i];
        }
      }
      if (ux + rx + 500 > gx[i] - gr && ux - rx + 500 < gx[i] + gr) {
        if (gDead[i] == false && y + ry > height - 50 - gr*2 && y + ry < height - 50) {
          if (ys >= 0) {
            gDead[i] = true;
            goombasKilled = goombasKilled + 1;
          } else {
            loseALife();
          }
        }
        if (gDead[i] == false && y + ry == height - 50) {
          loseALife();
        }
      }
    }
  }
}

class jumps {
  float x;
  jumps(float a) {
    x = a;
  }
  void run() {
    noStroke();
    fill(180, 1255, 180);
    rect(x + xPos, height - 75, 100, 75);
    rect(x + 200 + xPos, height - 75, 100, 75);
    rect(x + 400 + xPos, height - 75, 100, 75);
    if (xPos <= -x + 500 && xPos > -x + 400) {
      b = height - 75;
    }
    if (xPos <= -x + 400 && xPos > -x + 300) {
      b = height*2;
    }
    if (xPos <= -x + 300 && xPos > -x + 200) {
      b = height - 75;
    }
    if (xPos <= -x + 200 && xPos > -x + 100) {
      b = height*2;
    }
    if (xPos <= -x + 100 && xPos > -x) {
      b = height - 75;
    }
    if (xPos <= -x && xPos > -x - 100) {
      b = height*2;
    }
    if (xPos >= -x + 500 && xPos <= -x + 500 + rx && y + ry > height - 75) {
      xPos = -x + 500 + rx;
    }
    if (xPos >= -x + 300 && xPos <= -x + 300 + rx && y + ry > height - 75) {
      xPos = -x + 300 + rx;
    }
    if (xPos >= -x + 100 && xPos <= -x + 100 + rx && y + ry > height - 75) {
      xPos = -x + 100 + rx;
    }
  }
}

class goombas {
  float x, gr, leftB, rightB;
  float[] gx = new float[4];
  float[] gs = new float[4];
  boolean[] gDead = new boolean[4];
  goombas(float a) {
    x = a;
    gr = 10;
    leftB = x + 150 + gr;
    rightB = x + 550 - gr;
    for (int i = 0; i < gx.length; i++) {
      gx[i] = leftB + i*(rightB - leftB)/3;
      gs[i] = 1;
      gDead[i] = false;
    }
  }
  void run() {
    noStroke();
    fill(20, 120, 20);
    rect(x + 100 + xPos, height - 125, 50, 125);
    rect(x + 550 + xPos, height - 125, 50, 125);
    rect(x + 95 + xPos, height - 125, 60, 20);
    rect(x + 545 + xPos, height - 125, 60, 20);
    fill(180, 255, 180);
    rect(x + xPos, height - 75, 600, 75);
    if (xPos <= -x + 500 && xPos > -x + 400) {
      b = height - 75;
    }
    if (xPos <= -x + 400 && xPos > -x + 350) {
      b = height - 125;
    }
    if (xPos <= -x + 350 && xPos > -x - 50) {
      b = height - 75;
    }
    if (xPos <= -x - 50 && xPos > -x - 100) {
      b = height - 125;
    }
    if (xPos >= -x + 500 && xPos <= -x + 500 + rx && y + ry > height - 75) {
      xPos = -x + 500 + rx;
    }
    if (xPos >= -x + 400 && xPos <= -x + 400 + rx && y + ry > height - 125) {
      xPos = -x + 400 + rx;
    }
    if (xPos >= -x - 50 && xPos <= -x - 50 + rx && y + ry > height - 125) {
      xPos = -x - 50 + rx;
    }
    for (int i = 0; i < gx.length; i++) {
      if (gDead[i] == false) {
        image(poop, gx[i] + xPos - gr*1.75, height - 75 - gr*3, gr*3.5, gr*3.5);
        gx[i] = gx[i] + gs[i];
        if ((gx[i] < leftB)||(gx[i] > rightB)) {
          gs[i] = -gs[i];
        }
      }
      if (ux + rx + 500 > gx[i] - gr && ux - rx + 500 < gx[i] + gr) {
        if (gDead[i] == false && y + ry > height - 75 - gr*2 && y + ry < height - 75) {
          if (ys >= 0) {
            gDead[i] = true;
            goombasKilled = goombasKilled + 1;
          } else {
            loseALife();
          }
        }
        if (gDead[i] == false && y + ry == height - 75) {
          loseALife();
        }
      }
    }
  }
}
